/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

plugins {
    id 'com.github.hierynomus.license' version '0.14.0' apply false
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
}

version project.projectVersion


ext {

    dependencyVersions = [
        'micronaut.inject':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-inject'
        ],
        'micronaut.validation':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-validation'
        ],
        'micronaut.aop':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-aop'
        ],
        'micronaut.inject-java':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-inject-java'
        ],
        'micronaut.runtime':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-runtime'
        ],
        'micronaut.http-server':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-http-server-netty'
        ],
        'micronaut.http-client':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-http-client'
        ],
        'micronaut.discovery-client':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-discovery-client'
        ],

        'micronaut.management':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-management'
        ],
        'micronaut.messaging':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-messaging'
        ],
        'micronaut.views':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-views'
        ],
        'micronaut.session':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-session'
        ],
        'micronaut.security':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-security'
        ],
        'micronaut.security-jwt':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-security-jwt'
        ],
        'micronaut.security-session':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-security-session'
        ],
        'micronaut.websocket':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-websocket'
        ],
        'micronaut.tracing':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-tracing'
        ],
        'micronaut.graal':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-graal'
        ],
        'micronaut.multitenancy':[
            version: micronautVersion,
            group  : 'io.micronaut',
            name   : 'micronaut-multitenancy'
        ],
        'micronaut.jmx':[
            version: micronautVersion,
            group  : 'io.micronaut.configuration',
            name   : 'micronaut-jmx'
        ],
        'micronaut.picocli':[
            version: micronautVersion,
            group  : 'io.micronaut.configuration',
            name   : 'micronaut-picocli'
        ],
        'micronaut.openapi':[
            version: micronautVersion,
            group  : 'io.micronaut.configuration',
            name   : 'micronaut-openapi'
        ],
        'micronaut.cassandra':[
            version: micronautVersion,
            group  : 'io.micronaut.configuration',
            name   : 'micronaut-cassandra'
        ],
        'micronaut.validator':[
            version: micronautVersion,
            group  : 'io.micronaut.configuration',
            name   : 'micronaut-hibernate-validator'
        ],
        'micronaut.aws': [
            version:micronautAwsVersion,
            group:'io.micronaut.configuration',
            name:'micronaut-aws-common'
        ],
        'micronaut.elasticsearch': [
            version:micronautElasticsearch,
            group:'io.micronaut.configuration',
            name:'micronaut-elasticsearch'
        ],
        'micronaut.flyway': [
            version:micronautFlyway,
            group:'io.micronaut.configuration',
            name:'micronaut-flyway'
        ],
        'micronaut.micrometer': [
            version:micronautMicrometerVersion,
            group:'io.micronaut.configuration',
            name:'micronaut-micrometer-core',
            modules:['micronaut-micrometer-registry-atlas', 'micronaut-micrometer-registry-graphite',
                     'micronaut-micrometer-registry-prometheus', 'micronaut-micrometer-registry-statsd'  ]
        ],
        'micronaut.sql': [
            version:micronautSqlVersion,
            group:'io.micronaut.configuration',
            name:'micronaut-hibernate-jpa',
            modules:['micronaut-jdbc-tomcat', 'micronaut-jdbc-hikari', 'micronaut-jdbc-dbcp', 'micronaut-postgres-reactive']
        ],
        'micronaut.mongo': [
            version:micronautMongoVersion,
            group:'io.micronaut.configuration',
            name:'micronaut-mongo-reactive'
        ],
        'micronaut.redis': [
            version:micronautRedisVersion,
            group:'io.micronaut.configuration',
            name:'micronaut-redis-lettuce'
        ],
        'micronaut.neo4j': [
            version:micronautNeo4jVersion,
            group:'io.micronaut.configuration',
            name:'micronaut-neo4j-bolt'
        ],
        'micronaut.kafka': [
            version:micronautKafkaVersion,
            group:'io.micronaut.configuration',
            name:'micronaut-kafka',
            modules:['micronaut-kafka-streams']
        ],
        'micronaut.rabbitmq': [
            version:micronautRabbitMQVersion,
            group:'io.micronaut.configuration',
            name:'micronaut-rabbitmq'
        ],
        'micronaut.liquibase': [
            version:micronautLiquibase,
            group:'io.micronaut.configuration',
            name:'micronaut-liquibase'
        ],
        'micronaut.netflix': [
            version:micronautNetflixVersion,
            group:'io.micronaut.configuration',
            name:'micronaut-netflix-archaius',
            modules:['micronaut-netflix-hystrix', 'micronaut-netflix-ribbon']
        ],
        'micronaut.test'           : [
            version: micronautTestVersion,
            group  : 'io.micronaut.test',
            name   : 'micronaut-test-core',
            modules: ['micronaut-test-spock', 'micronaut-test-junit5']
        ],
        'micronaut.grpc'           : [
            version: micronautGrpcVersion,
            group  : 'io.micronaut.grpc',
            name   : 'micronaut-grpc-runtime',
            modules: ['micronaut-grpc-annotation']
        ],
        'micronaut.groovy': [
            version:micronautGroovyVersion,
            group:'io.micronaut',
            name:'micronaut-runtime-groovy',
            modules:['micronaut-function-groovy']
        ],
        'micronaut.function-aws': [
            version:micronautAwsVersion,
            group:'io.micronaut',
            name:'micronaut-function-aws'
        ],
        'micronaut.function.aws': [
            version:micronautAwsVersion,
            group:'io.micronaut.aws',
            name:'micronaut-function-aws-api-proxy',
            modules: ['micronaut-function-aws-custom-runtime', 'micronaut-function-aws-alexa']
        ],
        'micronaut.gorm': [
            version:micronautGroovyVersion,
            group:'io.micronaut.configuration',
            name:'micronaut-gorm-common',
            modules:['micronaut-multitenancy-gorm', 'micronaut-neo4j-gorm', 'micronaut-mongo-gorm', 'micronaut-hibernate-gorm']
        ],
        jackson                    : [
            version: jacksonVersion,
            group  : 'com.fasterxml.jackson.core',
            name   : 'jackson-databind',
            modules: ['jackson-core', 'jackson-annotations']
        ],
        'jackson.modules'          : [
            version: jacksonVersion,
            group  : 'com.fasterxml.jackson.module',
            name   : 'jackson-module-afterburner',
            modules: ['jackson-module-kotlin', 'jackson-module-parameter-names', 'jackson-module-jaxb-annotations']
        ],
        'jackson.datatype'         : [
            version: jacksonVersion,
            group  : 'com.fasterxml.jackson.datatype',
            name   : 'jackson-datatype-jdk8',
            modules: ['jackson-datatype-jsr310']
        ],
        jaeger                     : [
            version: jaegerVersion,
            group  : 'io.jaegertracing',
            name   : 'jaeger-thrift'
        ],
        'zipkin.reporter'          : [
            version: zipkinReporterVersion,
            group  : 'io.zipkin.reporter2',
            name   : 'zipkin-reporter'
        ],
        'brave.instrumentation'    : [
            version: braveInstrumentationHttpVersion,
            group  : 'io.zipkin.brave',
            name   : 'brave-instrumentation-http'
        ],
        'brave.opentracing'        : [
            version: braveOpentracingVersion,
            group  : 'io.opentracing.brave',
            name   : 'brave-opentracing'
        ],
        'javax.annotation-api'     : [
            version: javaxAnnotationApiVersion,
            group  : 'javax.annotation',
            name   : 'javax.annotation-api'
        ],
        jsr305                     : [
            version: jsr305Version,
            group  : 'com.google.code.findbugs',
            name   : 'jsr305'
        ],
        kafka                      : [
            version: kafkaVersion,
            group  : 'org.apache.kafka',
            name   : 'kafka-clients',
            modules: ['kafka_2.12', 'kafka-streams']
        ],
        'micrometer'               : [
            version: micrometerVersion,
            group  : 'io.micrometer',
            name   : 'micrometer-core',
            modules: ['micrometer-registry-atlas', 'micrometer-registry-graphite', 'micrometer-registry-prometheus', 'micrometer-registry-statsd']
        ],
        'junit5'               : [
            version: junit5Version,
            group  : 'org.junit.jupiter',
            name   : 'junit-jupiter-api',
            modules: ['junit-jupiter-engine', 'junit-jupiter-params']
        ],
        'mongo' : [
            version: mongoVersion,
            group  : 'org.mongodb',
            modules: ['mongodb-driver-async', 'mongo-java-driver']
        ],
        'mongo.reactive'           : [
            version: mongoReactiveVersion,
            group  : 'org.mongodb',
            name   : 'mongodb-driver-reactivestreams'
        ],
        netty                      : [
            version: nettyVersion,
            group  : 'io.netty',
            name   : 'netty-codec-http',
            modules: ['netty-all', 'netty-buffer', 'netty-codec', 'netty-codec-dns', 'netty-codec-haproxy',
                      'netty-codec-http2', 'netty-codec-memcache', 'netty-codec-mqtt',
                      'netty-codec-redis', 'netty-codec-smtp', 'netty-codec-socks', 'netty-codec-stomp',
                      'netty-codec-xml', 'netty-common', 'netty-dev-tools', 'netty-handler',
                      'netty-handler-proxy', 'netty-resolver', 'netty-resolver-dns', 'netty-transport',
                      'netty-transport-rxtx', 'netty-transport-sctp', 'netty-transport-udt']
        ],
        opentracing                : [
            version: '0.31.0',
            group  : 'io.opentracing',
            name   : 'opentracing-api',
            modules: ['opentracing-util']
        ],
        picocli                    : [
            version: picocliVersion,
            group  : 'info.picocli',
            name   : 'picocli'
        ],
        lettuce                    : [
            version: lettuceVersion,
            group  : 'io.lettuce',
            name   : 'lettuce-core'

        ],
        snakeyaml                  : [
            version: yamlVersion,
            group  : 'org.yaml',
            name   : 'snakeyaml'
        ],
        slf4j                      : [
            version: slf4jVersion,
            group  : 'org.slf4j',
            name   : 'slf4j-api',
            modules: ['slf4j-simple']
        ],
        swagger                    : [
            version: '2.0.4',
            group  : 'io.swagger.core.v3',
            name   : 'swagger-core',
            modules: ['swagger-models', 'swagger-annotations']
        ],
        'reactive.streams'         : [
            version: reactiveStreamsVersion,
            group  : 'org.reactivestreams',
            name   : 'reactive-streams'
        ],
        'reactive.pg.client'       : [
            version: reactivePgClientVersion,
            group  : 'io.reactiverse',
            name   : 'reactive-pg-client'
        ],
        rxjava2                    : [
            version: rxJava2Version,
            group  : 'io.reactivex.rxjava2',
            name   : 'rxjava'
        ],
        validation                 : [
            version: validationVersion,
            group  : 'javax.validation',
            name   : 'validation-api'
        ],
        hystrix                    : [
            version: hystrixVersion,
            group  : 'com.netflix.hystrix',
            name   : 'hystrix-core',
            modules: ['hystrix-serialization']
        ],
        graal                      : [
            version: graalVersion,
            group  : 'com.oracle.substratevm',
            name   : 'svm'
        ],
        h2                         : [
            version: h2Version,
            group  : 'com.h2database',
            name   : 'h2'
        ],
        liquibase                  : [
            version: liquibaseVersion,
            group  : 'org.liquibase',
            name   : 'liquibase-core'
        ],
        flyway                     : [
            version: flywayVersion,
            group  : 'org.flywaydb',
            name   : 'flyway-core'
        ],
        elasticsearch              : [
            version: elasticsearchVersion,
            group  : 'org.elasticsearch.client',
            name   : 'elasticsearch-rest-high-level-client'
        ]
    ]

    dependencyVersion = { String name ->
        def dep = dependencyVersions[name]
        if (dep == null) {
            throw new IllegalArgumentException("No core dependency defined for name: $name")
        }
        return "$dep.group:$dep.name:$dep.version".toString()
    }
    dependencyModuleVersion = { String name, String module ->
        def dep = dependencyVersions[name]
        if (dep == null) {
            throw new IllegalArgumentException("No core dependency defined for name: $name")
        }
        return "$dep.group:$module:$dep.version".toString()
    }

}

subprojects { subproject ->

    version project.projectVersion
    group project.projectGroupId

    ext {
        isBuildSnapshot = version.toString().endsWith("-SNAPSHOT")
    }

    repositories {
        mavenLocal()
        maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://repo.grails.org/grails/core" }
    }

    apply plugin:"java-library"

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    jar {
        manifest {
            attributes('Automatic-Module-Name': "${subproject.group}.${subproject.name}".replaceAll('[^\\w\\.\\$_]', "_"))
            attributes('Implementation-Version': projectVersion)
            attributes('Implementation-Title': 'Monkey')
        }
    }

    tasks.withType(Test) {
        jvmArgs '-Duser.country=US'
        jvmArgs '-Duser.language=en'
        testLogging {
            exceptionFormat = 'full'
        }
        afterSuite {
            System.out.print(".")
            System.out.flush()
        }

        reports.html.enabled = !System.getenv("TRAVIS")
        reports.junitXml.enabled = !System.getenv("TRAVIS")
    }

    dependencies {
        implementation platform("io.micronaut:micronaut-bom:$micronautVersion")

        runtimeOnly "ch.qos.logback:logback-classic:$logbackVersion"

        testImplementation "io.micronaut:micronaut-inject-java"
        testImplementation("org.junit.jupiter:junit-jupiter:$junit5Version")
        testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junit5Version")
        testImplementation("org.mockito:mockito-junit-jupiter:$mockitoJunit5Version")
        testAnnotationProcessor "io.micronaut:micronaut-inject-java:$micronautVersion"
    }

    test {
        useJUnitPlatform {
            includeEngines 'junit-jupiter'
        }
        testLogging {
            events "passed", "skipped", "failed"
        }

        systemProperty "micronaut.cloud.platform", "OTHER"
    }

    apply from: "${rootProject.rootDir}/gradle/publishing.gradle"
    apply plugin: 'checkstyle'

    checkstyle {
        toolVersion = 8.10
        configFile = rootProject.file('config/checkstyle/checkstyle.xml')

        // Per submodule
        maxErrors = 1
        maxWarnings = 10

        showViolations = true
    }

    checkstyleTest.enabled = false
}

allprojects {
    apply plugin: 'idea'

    idea {
        module {
            outputDir file('build/classes/java/main')
            testOutputDir file('build/classes/java/test')
        }
    }
    apply from: rootProject.file('gradle/license.gradle')
}
